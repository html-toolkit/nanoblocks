// Default config
_ie ?= false // For smart IE including
vendor-prefixes ?= webkit moz ms o official // Default used prefixes

// Based on visionmedia's nib/vendor.styl 
vendor(prop, args, only = null, ignore = null)
    push(only, 'official') // Implied official properties
    for prefix in vendor-prefixes
        unless (only and !(prefix in only)) or (ignore and prefix in ignore) or _ie
            if prefix == official
                {prop}: args
            else
                {'-' + prefix + '-' + prop}: args

border-radius()
    vendor('border-radius', arguments, webkit moz);

box-shadow()
    vendor('box-shadow', arguments, webkit moz);

transform()
    vendor('transform', arguments, webkit moz ms o);

background-size()
    vendor('background-size', arguments, moz o);

background-origin()
    vendor('background-origin', arguments, moz o);


// Selector hacks. Use in selectors .class{o-selector-hack}
o-selector-hack = ', x:-o-prefocus'

get(hash, key) {
    return pair[1] if pair[0] == key for pair in hash
}

gen(props) {
    for val in props {
        if val {
            {val[0]}: val[1]
        }
    }
}

//---------------------------------------------------------------------------//
/**
    @param {string} $prop_name CSS property to be rendered
    @param {Array.<Gradient>} $grads Gradients definition.

    Example:
        $grad1 = (#EEE 0) (#EFEFEF 100%)
        $grad2 = #FAFAFA #EFEFEF

        bg-gradient(background, $grad1)
        bg-gradient(background-image, $grad2)
        bg-gradient(background-image, $grad1, $grad2)
*/
bg-gradient($prop_name, $grads...) {
    $webkit = ()
    $moz = ()
    $o = ()
    $standart = ()

    $comma = unquote(',')

    for $grad, i in $grads {
        if (i > 0) {
            push($webkit, $comma) // Мегахак: вставляем разделитель как расквотированную запятую
            push($moz, $comma)
            push($o, $comma)
            push($standart, $comma)
        }

        $formula = unquote(join(', ', $grad))

        push($webkit, -webkit-linear-gradient(top, $formula))
        push($moz, -moz-linear-gradient(top, $formula))
        push($o, -o-linear-gradient(top, $formula))
        push($standart, linear-gradient(to bottom, $formula))
    }

    {$prop_name}: $webkit
    {$prop_name}: $moz
    {$prop_name}: $o
    {$prop_name}: $standart
}